{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "The request to respond to the authentication challenge, as an administrator.",
            "properties": {
                "AnalyticsMetadata": {
                    "description": "The analytics metadata for collecting Amazon Pinpoint metrics for <code>AdminRespondToAuthChallenge</code> calls.",
                    "properties": {
                        "AnalyticsEndpointId": {
                            "description": "The endpoint ID.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ChallengeName": {
                    "description": "The challenge name. For more information, see .",
                    "enum": [
                        "SMS_MFA",
                        "SOFTWARE_TOKEN_MFA",
                        "SELECT_MFA_TYPE",
                        "MFA_SETUP",
                        "PASSWORD_VERIFIER",
                        "CUSTOM_CHALLENGE",
                        "DEVICE_SRP_AUTH",
                        "DEVICE_PASSWORD_VERIFIER",
                        "ADMIN_NO_SRP_AUTH",
                        "NEW_PASSWORD_REQUIRED"
                    ],
                    "type": "string"
                },
                "ChallengeResponses": {
                    "description": "<p>The challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>, for example:</p> <ul> <li> <p> <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with client secret).</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, <code>TIMESTAMP</code>, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with client secret).</p> </li> <li> <p> <code>ADMIN_NO_SRP_AUTH</code>: <code>PASSWORD</code>, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with client secret). </p> </li> <li> <p> <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, any other required attributes, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with client secret). </p> </li> </ul> <p>The value of the <code>USERNAME</code> attribute must be the user's actual username, not an alias (such as email address or phone number). To make this easier, the <code>AdminInitiateAuth</code> response includes the actual username value in the <code>USERNAMEUSER_ID_FOR_SRP</code> attribute, even if you specified an alias in your call to <code>AdminInitiateAuth</code>.</p>",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "ClientId": {
                    "description": "The app client ID.",
                    "format": "password",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[\\w+]+",
                    "type": "string"
                },
                "ContextData": {
                    "description": "Contextual data such as the user's device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.",
                    "properties": {
                        "EncodedData": {
                            "description": "Encoded data containing device fingerprinting details, collected using the Amazon Cognito context data collection library.",
                            "type": "string"
                        },
                        "HttpHeaders": {
                            "description": "HttpHeaders received on your server in same order.",
                            "items": {
                                "description": "The HTTP header.",
                                "properties": {
                                    "headerName": {
                                        "description": "The header name",
                                        "type": "string"
                                    },
                                    "headerValue": {
                                        "description": "The header value.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "IpAddress": {
                            "description": "Source IP address of your user.",
                            "type": "string"
                        },
                        "ServerName": {
                            "description": "Your server endpoint where this API is invoked.",
                            "type": "string"
                        },
                        "ServerPath": {
                            "description": "Your server path where this API is invoked. ",
                            "type": "string"
                        }
                    },
                    "required": [
                        "IpAddress",
                        "ServerName",
                        "ServerPath",
                        "HttpHeaders"
                    ],
                    "type": "object"
                },
                "Session": {
                    "description": "The session which should be passed both ways in challenge-response calls to the service. If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines that the caller needs to go through another challenge, they return a session with other challenge parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code> API call.",
                    "maxLength": 2048,
                    "minLength": 20,
                    "type": "string"
                },
                "UserPoolId": {
                    "description": "The ID of the Amazon Cognito user pool.",
                    "maxLength": 55,
                    "minLength": 1,
                    "pattern": "[\\w-]+_[0-9a-zA-Z]+",
                    "type": "string"
                }
            },
            "required": [
                "UserPoolId",
                "ClientId",
                "ChallengeName"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}